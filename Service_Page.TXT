import java.util.LinkedList;
public class IndianBank implements Bank{
	LinkedList<Account> accounts=new LinkedList<>();

	public String createAccount(int accountNumber, int amount) throws MinimumBalanceException {
		if(amount>=500)
		{
			Account account=new Account();
			account.setAccountNumber(accountNumber);
			account.setAmount(amount);
			accounts.add(account);		
			return "Account created Successfully";
		}

		throw new MinimumBalanceException();
	}

	
	public Account searchAccount(int accountNumber) throws InvalidAccountNumberException {
		for(Account account:accounts)
		{
			if(accountNumber==account.getAccountNumber())
			{
				return account;
			}
			
		}
			
		throw new InvalidAccountNumberException();
	}

	
	public int withdrawAmount(int accountNumber, int amount)
			throws InvalidAccountNumberException, InsufficientBalanceAmountException {
Account account= searchAccount(accountNumber);
		
		if ((account.getAmount()-amount)>=500)
		{
			account.setAmount(account.getAmount()-amount);
			return account.getAmount();
					
		}
		
		throw new InsufficientBalanceAmountException();
	}

	
	public int[] fundTransfer(int senderAccount, int receiverAccount, int transferAmount)
			throws InsufficientBalanceAmountException, InvalidAccountNumberException {
		
		Account sender=searchAccount(senderAccount);
		Account receiver=searchAccount(receiverAccount);
		
		if (sender.getAmount()>=transferAmount)
		{
			int[] a = {sender.getAmount()-transferAmount, receiver.getAmount()+transferAmount};
			sender.setAmount(sender.getAmount()-transferAmount);
			receiver.setAmount(receiver.getAmount()+transferAmount);
			
			return a;
			
		}		
		
		throw new InsufficientBalanceAmountException();
				
	}

	@Override
	public int depositAmount(int accountnumber, int amount) throws InvalidAccountNumberException {
		Account account= searchAccount(accountnumber);
		if(true)
		{
			account.setAmount(account.getAmount()+amount);
			return account.getAmount();			
		}
		
		throw new InvalidAccountNumberException();
	}

}
